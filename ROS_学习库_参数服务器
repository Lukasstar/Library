plumbing_param_server/src/demo01_param_set.cpp
------向参数服务器增/改参数-------
#include"ros/ros.h"

int main(int argc, char *argv[])
{
    ros::init(argc,argv,"set_param");
    ros::NodeHandle nh;
    //----增参数-----
    nh.setParam("type","xiaoguang");
    nh.setParam("radius",0.57);
    ros::param::set("type_param","dreamstar");
    ros::param::set("radius_param",0.99);
    //----改参数----
    nh.setParam("radius",0.77);//覆盖相同键上次的值
    ros::param::set("radius_param",0.55);
    nh.setParam("radius1",7.99);
    return 0;
}
---------------------------------


plumbing_param_server/src/demo02_param_get.cpp
-----向参数服务器获取参数/删除参数-------
#include"ros/ros.h"

int main(int argc, char *argv[])
{
    setlocale(LC_ALL,"");
    ros::init(argc,argv,"get_param");
    ros::NodeHandle nh;
    
    //-----ros::NodeHandle.param(键,默认值) 如果存在，返回对应结果，否则返回默认值
    double Param_radius1 = nh.param("radius",7.77);
    ROS_INFO("radius = %.2f",Param_radius1);
    //-----ros::NodeHandle.getParam(键,存储结果的变量)如果存在,返回 true,且将值赋值给参数2,若键不存在，那么返回值为 false，且不为参数2赋值
    double Param_radius2 = 0;
    bool result1 = nh.getParam("radius_param",Param_radius2);
    if (result1)
    {
        ROS_INFO("radius_param = %.2f",Param_radius2);
    }else{
        ROS_INFO("查询参数不存在");
    }
    //-----getParamCached与getParam类似,能提高效率-----
    double Param_radius3 = 0;
    bool result2 = nh.getParamCached("radius1",Param_radius3);
    if (result2)
    {
        ROS_INFO("radius1 = %.2f",Param_radius3);
    }else{
        ROS_INFO("查询参数不存在");
    }
    //-----getParamNames(std::vector<std::string>)获取所有键的名称,并存储在参数 vector 中
    std::vector<std::string> names;
    nh.getParamNames(names);
    for (auto && name : names)  
    {
        ROS_INFO("遍历的元素：%s",name.c_str());//在遍历的过程中如果修改容器，会造成迭代器失效
    }
    //----hasParam(键)判断是否包含某个键，存在返回 true，否则返回 false
    bool estimate1 = nh.hasParam("type");
    bool estimate2 = nh.hasParam("xxxxx");
    if(estimate1)
    {
        ROS_INFO("type存在");
    }else{
        ROS_INFO("type不存在");
    }
    if(estimate2)
    {
        ROS_INFO("xxxxx存在");
    }else{
        ROS_INFO("xxxxx不存在");
    }
    //-----searchParam(参数1，参数2)搜索键，参数1是被搜索的键，参数2存储搜索结果的变量
    std::string key;
    nh.searchParam("type",key);
    ROS_INFO("搜索结果：%s",key.c_str());

    //---ros::param::

    //---删除参数
    bool a1=nh.deleteParam("radius1");
    if(a1)
    {
        ROS_INFO("删除参数radius1成功！！");
    }else{
        ROS_INFO("删除失败！！！");
    }
    bool a2=ros::param::del("radius1");

    return 0;
}
-----------------------------

plumbing_param_server/src/CMakeLists.txt
-----------------------------
137  add_executable(demo01_param_set src/demo01_param_set.cpp)
138  add_executable(demo02_param_get src/demo02_param_get.cpp)

154  target_link_libraries(demo01_param_set
155   ${catkin_LIBRARIES}
156  )
157  target_link_libraries(demo02_param_get
158   ${catkin_LIBRARIES}
159  )
